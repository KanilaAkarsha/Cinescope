{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/db/index.js"],"sourcesContent":["import {MongoClient} from 'mongodb';\n\nconst options = {};\nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://localhost:27017\";\n\nconst client = new MongoClient(MONGODB_URI, options);\n\nexport const db = client.db(\"sample_mflix\"); // Access the database instance\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,UAAU,CAAC;AACjB,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAE/C,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,aAAa;AAErC,MAAM,KAAK,OAAO,EAAE,CAAC,iBAAiB,+BAA+B","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/actions/movies.js"],"sourcesContent":["\"use server\";\nimport {db} from \"@/db\";\nimport { ObjectId } from \"mongodb\";\n\n// get all movies database - action\nexport const getMovies = async () => {\n    console.log(\"response\")\n    try {\n        // Fetch movies from the API\n        const movieResponse = await fetch(`${process.env.API_BASE_URL}/v1/movies`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n                cache: \"no-store\",\n            }\n        );\n        \n\n\n        if (!movieResponse.ok) {\n            throw new Error(\"Failed to fetch movies\");\n        }\n\n        if (movieResponse.status === 200) {\n            return await movieResponse.json();\n        }else{\n            console.log(\"No movies found\");\n            return undefined;\n        }\n    } catch (error) {\n        console.log(\"Error fetching movies:\", error);\n        return undefined;\n    }\n}\n\n// option 2 : Search movies from the database using server action\n\nexport const searchMovies = async (query) => {\n    \n    try{\n        //search by title (i=case insensitive)\n        const movies = await db.collection(\"movies_n\").find({title: {$regex: query, $options: \"i\" }}).limit(50).toArray();\n        console.log(\"movies\",movies)\n        if(movies && movies.length > 0){\n            return {\n                success: true,\n                message: \"Movies fetched successfully\",\n                data: movies,\n            };\n        }else{\n            return {\n                success: false,\n                message: \"No movies found\",\n                data: [],\n            };\n        }\n    }catch(error){\n        console.log(\"Error\",error)\n        return {\n                success: false,\n                message: \"Error fetching movies\",\n                data: [],\n            };\n}\n};\n\nexport const createMovie = async (movie) => {\n    try{\n        const result = await db.collection(\"movies_n\").insertOne(movie);\n\n        if(result.acknowledged){\n            console.log(`A movie was inserted with the _id: ${result.insertedId}`)\n\n            return {\n                success: true,\n                message: \"Movie Created Successfully\",\n            };\n        }else{\n            return undefined;\n        }\n    }catch(error){\n        console.log(\"Mongodb movie insert failed\",error)\n    }\n};\n\nexport const updateMovie = async (movieDoc,movieId) => {\n    try{\n        const result = await db.collection(\"movies_n\").updateOne(\n            { _id:  ObjectId.createFromHexString(movieId) }, // Filter to find the movie by its ID\n            { $set: movieDoc },\n            { upsert: true } // Update the movie with the new data\n        );\n\n        if(result.acknowledged){\n            console.log(`A movie was updated with the _id: ${result.upsertedId}`)\n\n            return {\n                success: true,\n                message: \"Movie Updated Successfully\",\n            };\n        }else{\n            return undefined;\n        }\n    }catch(error){\n        console.log(\"Mongodb movie update failed\",error)\n    }\n};\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;;;;;;AAGO,MAAM,YAAY;IACrB,QAAQ,GAAG,CAAC;IACZ,IAAI;QACA,4BAA4B;QAC5B,MAAM,gBAAgB,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,EACrE;YACI,QAAQ;YACR,SAAS;gBACL,gBAAgB;gBAChB,QAAQ;YACZ;YACA,OAAO;QACX;QAKJ,IAAI,CAAC,cAAc,EAAE,EAAE;YACnB,MAAM,IAAI,MAAM;QACpB;QAEA,IAAI,cAAc,MAAM,KAAK,KAAK;YAC9B,OAAO,MAAM,cAAc,IAAI;QACnC,OAAK;YACD,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,0BAA0B;QACtC,OAAO;IACX;AACJ;AAIO,MAAM,eAAe,OAAO;IAE/B,IAAG;QACC,sCAAsC;QACtC,MAAM,SAAS,MAAM,2GAAA,CAAA,KAAE,CAAC,UAAU,CAAC,YAAY,IAAI,CAAC;YAAC,OAAO;gBAAC,QAAQ;gBAAO,UAAU;YAAI;QAAC,GAAG,KAAK,CAAC,IAAI,OAAO;QAC/G,QAAQ,GAAG,CAAC,UAAS;QACrB,IAAG,UAAU,OAAO,MAAM,GAAG,GAAE;YAC3B,OAAO;gBACH,SAAS;gBACT,SAAS;gBACT,MAAM;YACV;QACJ,OAAK;YACD,OAAO;gBACH,SAAS;gBACT,SAAS;gBACT,MAAM,EAAE;YACZ;QACJ;IACJ,EAAC,OAAM,OAAM;QACT,QAAQ,GAAG,CAAC,SAAQ;QACpB,OAAO;YACC,SAAS;YACT,SAAS;YACT,MAAM,EAAE;QACZ;IACZ;AACA;AAEO,MAAM,cAAc,OAAO;IAC9B,IAAG;QACC,MAAM,SAAS,MAAM,2GAAA,CAAA,KAAE,CAAC,UAAU,CAAC,YAAY,SAAS,CAAC;QAEzD,IAAG,OAAO,YAAY,EAAC;YACnB,QAAQ,GAAG,CAAC,CAAC,mCAAmC,EAAE,OAAO,UAAU,EAAE;YAErE,OAAO;gBACH,SAAS;gBACT,SAAS;YACb;QACJ,OAAK;YACD,OAAO;QACX;IACJ,EAAC,OAAM,OAAM;QACT,QAAQ,GAAG,CAAC,+BAA8B;IAC9C;AACJ;AAEO,MAAM,cAAc,OAAO,UAAS;IACvC,IAAG;QACC,MAAM,SAAS,MAAM,2GAAA,CAAA,KAAE,CAAC,UAAU,CAAC,YAAY,SAAS,CACpD;YAAE,KAAM,uGAAA,CAAA,WAAQ,CAAC,mBAAmB,CAAC;QAAS,GAC9C;YAAE,MAAM;QAAS,GACjB;YAAE,QAAQ;QAAK,EAAE,qCAAqC;;QAG1D,IAAG,OAAO,YAAY,EAAC;YACnB,QAAQ,GAAG,CAAC,CAAC,kCAAkC,EAAE,OAAO,UAAU,EAAE;YAEpE,OAAO;gBACH,SAAS;gBACT,SAAS;YACb;QACJ,OAAK;YACD,OAAO;QACX;IACJ,EAAC,OAAM,OAAM;QACT,QAAQ,GAAG,CAAC,+BAA8B;IAC9C;AACJ;;;IAxGa;IAmCA;IA6BA;IAmBA;;AAnFA,+OAAA;AAmCA,+OAAA;AA6BA,+OAAA;AAmBA,+OAAA","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/.next-internal/server/app/admin/movies/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {updateMovie as '7f03b6e35ce3120448612bbd2f8c33375f358780d7'} from 'ACTIONS_MODULE0'\nexport {getMovies as '7f087a2d6dc3412e9b5f19906a001be56a12c999b0'} from 'ACTIONS_MODULE0'\nexport {createMovie as '7fd290a89e25327ac58e8613810692d8ed33ccc944'} from 'ACTIONS_MODULE0'\nexport {searchMovies as '7fe6ef1262a7b828972fba2327a0187c9cdaba93b5'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/components/add-movie-form.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/add-movie-form.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/add-movie-form.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/components/add-movie-form.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/add-movie-form.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/add-movie-form.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/app/admin/movies/movie-table.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/admin/movies/movie-table.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/admin/movies/movie-table.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/app/admin/movies/movie-table.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/admin/movies/movie-table.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/admin/movies/movie-table.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/app/admin/movies/movies-data.jsx"],"sourcesContent":["import { searchMovies } from \"@/actions/movies\";\nimport MovieTable from \"./movie-table\";\n\nexport default async function MoviesData({ query = \"\" }) {\n  //Fetch movies data from database \n  //option 1: fetch from api route\n  //option 2: direct database query (server component)\n\n  try{\n    const { data: moviesData = [] } = await searchMovies(query);\n    // console.log( \"Movies\" , moviesData);\n\n    if(!moviesData.length) throw new Error(\"No movies found\");\n\n    const refinedMovies = moviesData.map((movie) => ({\n      id: movie._id.toString(),\n      title: movie.title,\n      year: movie.year,\n      plot: movie.plot,\n      rated: movie.rated,\n      genres: movie.genres,\n      poster: movie.poster,\n      imdb: movie.imdb,\n      runtime: movie.runtime,\n      status: movie.status ?? \"published\",\n      directors: movie.directors,\n    }));\n\n    return <MovieTable movies={refinedMovies}/>;\n\n  } catch {\n\n    return <div>No Movies Available!</div>;\n\n  }\n  \n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe,WAAW,EAAE,QAAQ,EAAE,EAAE;IACrD,kCAAkC;IAClC,gCAAgC;IAChC,oDAAoD;IAEpD,IAAG;QACD,MAAM,EAAE,MAAM,aAAa,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD,EAAE;QACrD,uCAAuC;QAEvC,IAAG,CAAC,WAAW,MAAM,EAAE,MAAM,IAAI,MAAM;QAEvC,MAAM,gBAAgB,WAAW,GAAG,CAAC,CAAC,QAAU,CAAC;gBAC/C,IAAI,MAAM,GAAG,CAAC,QAAQ;gBACtB,OAAO,MAAM,KAAK;gBAClB,MAAM,MAAM,IAAI;gBAChB,MAAM,MAAM,IAAI;gBAChB,OAAO,MAAM,KAAK;gBAClB,QAAQ,MAAM,MAAM;gBACpB,QAAQ,MAAM,MAAM;gBACpB,MAAM,MAAM,IAAI;gBAChB,SAAS,MAAM,OAAO;gBACtB,QAAQ,MAAM,MAAM,IAAI;gBACxB,WAAW,MAAM,SAAS;YAC5B,CAAC;QAED,qBAAO,8OAAC,yIAAA,CAAA,UAAU;YAAC,QAAQ;;;;;;IAE7B,EAAE,OAAM;QAEN,qBAAO,8OAAC;sBAAI;;;;;;IAEd;AAEF","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/components/add-movie-dialog.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/add-movie-dialog.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/add-movie-dialog.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/components/add-movie-dialog.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/add-movie-dialog.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/add-movie-dialog.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///Users/kanilaakarsha/Documents/GitHub/Cinescope/app/admin/movies/page.jsx"],"sourcesContent":["\nimport AddMoviesForm from \"@/components/add-movie-form\";\nimport MoviesData from \"./movies-data\";\nimport AddMovieDialog from \"@/components/add-movie-dialog\";\n\nexport default function MoviesPage(){\n    return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Movies</h2>\n          <p className=\"text-muted-foreground\">Manage Your movies catalog</p>\n        </div>\n        <AddMovieDialog/>\n      </div>\n      \n      <MoviesData query=\"\"/>\n    </div>\n    );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAEe,SAAS;IACpB,qBACA,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEvC,8OAAC,qIAAA,CAAA,UAAc;;;;;;;;;;;0BAGjB,8OAAC,yIAAA,CAAA,UAAU;gBAAC,OAAM;;;;;;;;;;;;AAGxB","debugId":null}}]
}